// Code generated by go-swagger; DO NOT EDIT.

package url

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetLongHandlerFunc turns a function with the right signature into a get long handler
type GetLongHandlerFunc func(GetLongParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetLongHandlerFunc) Handle(params GetLongParams) middleware.Responder {
	return fn(params)
}

// GetLongHandler interface for that can handle valid get long params
type GetLongHandler interface {
	Handle(GetLongParams) middleware.Responder
}

// NewGetLong creates a new http.Handler for the get long operation
func NewGetLong(ctx *middleware.Context, handler GetLongHandler) *GetLong {
	return &GetLong{Context: ctx, Handler: handler}
}

/*
	GetLong swagger:route GET /short-url/{token} Url getLong

return long url
*/
type GetLong struct {
	Context *middleware.Context
	Handler GetLongHandler
}

func (o *GetLong) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetLongParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
